{"remainingRequest":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/babel-loader/lib/index.js!/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/src/views/CreateTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/src/views/CreateTag.vue","mtime":1618344778477},{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jb3JpYnVzaG1hbi9EZXNrdG9wL0NTIDI2MC9jcDQtam91cm5hbC9mcm9udC1lbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDcmVhdGVUYWcnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWdzOiBbXSwKICAgICAgYWRkZWRUYWc6IG51bGwsCiAgICAgIGVkaXRlZFRhZzoge30sCiAgICAgIG5ld1RhZzogewogICAgICAgIGlkOiAwLAogICAgICAgIHRpdGxlOiAiIiwKICAgICAgICBjb2xvcjogIiIsCiAgICAgICAgZW50cmllczogW10KICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFRhZ3MoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRlbGV0ZVRhZzogZnVuY3Rpb24gZGVsZXRlVGFnKHRhZ1RvRGVsZXRlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZGVsZXRlKCIvYXBpL3RhZ3MvIiArIHRhZ1RvRGVsZXRlLmlkKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3RoaXMuZ2V0VGFncygpOwoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHRydWUpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2VsZWN0OiBmdW5jdGlvbiBzZWxlY3QodGFnKSB7CiAgICAgIHRoaXMuZWRpdGVkVGFnLmlkID0gdGFnLmlkOwogICAgICB0aGlzLmVkaXRlZFRhZy50aXRsZSA9IHRhZy50aXRsZTsKICAgICAgdGhpcy5lZGl0ZWRUYWcuY29sb3IgPSB0YWcuY29sb3I7CiAgICAgIHRoaXMuZWRpdGVkVGFnLmVudHJpZXMgPSB0YWcuZW50cmllczsKICAgICAgdGhpcy5nZXRUYWdzKCk7CiAgICB9LAogICAgdXBkYXRlVGFnOiBmdW5jdGlvbiB1cGRhdGVUYWcoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQoIi9hcGkvdGFncy8iICsgX3RoaXMyLmVkaXRlZFRhZy5pZCwgewogICAgICAgICAgICAgICAgICBpZDogX3RoaXMyLmVkaXRlZFRhZy5pZCwKICAgICAgICAgICAgICAgICAgdGl0bGU6IF90aGlzMi5lZGl0ZWRUYWcudGl0bGUsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiBfdGhpczIuZWRpdGVkVGFnLmNvbG9yLAogICAgICAgICAgICAgICAgICBlbnRpZXM6IF90aGlzMi5lZGl0ZWRUYWcuZW50cmllcwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF90aGlzMi5lZGl0ZWRUYWcgPSB7fTsKCiAgICAgICAgICAgICAgICBfdGhpczIuZ2V0VGFncygpOwoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldFRhZ3M6IGZ1bmN0aW9uIGdldFRhZ3MoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCIvYXBpL3RhZ3MiKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzMy50YWdzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzAsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHVwbG9hZDogZnVuY3Rpb24gdXBsb2FkKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX3RoaXM0Lm5ld1RhZy5pZCA9IF90aGlzNC50YWdzLmxlbmd0aCArIDEwMDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgnL2FwaS90YWdzJywgewogICAgICAgICAgICAgICAgICBpZDogX3RoaXM0Lm5ld1RhZy5pZCwKICAgICAgICAgICAgICAgICAgdGl0bGU6IF90aGlzNC5uZXdUYWcudGl0bGUsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiBfdGhpczQubmV3VGFnLmNvbG9yLAogICAgICAgICAgICAgICAgICBlbnRyaWVzOiBfdGhpczQubmV3VGFnLmVudHJpZXMKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXM0LmFkZGVkVGFnID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgICAgICAgICBfdGhpczQuZ2V0VGFncygpOwoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzAsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["CreateTag.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page\">\n    <h1>Create a Journal Tag</h1>\n    <div class=\"add\">\n        <div class=\"form\">\n          <input v-model=\"newTag.title\" placeholder=\"Title\">\n          <p></p>\n          <input v-model=\"newTag.color\" placeholder=\"Color word or #hex\">\n          <p></p>\n          <button @click=\"upload\">Upload</button>\n        </div>\n        <div class=\"upload\" v-if=\"addedTag\">\n          <p>Your tag has been added! Title: {{addedTag.title}}</p>\n        </div>\n      </div>\n\n      <hr>\n      <h1>Current Journal Tags</h1>\n\n      <div class=\"edit\" v-if=\"Object.keys(editedTag).length !== 0\">\n        <input v-model=\"editedTag.title\" placeholder=\"Title\">\n        <p></p>\n        <input v-model=\"editedTag.color\" placeholder=\"Color\">\n        <button @click=\"updateTag()\">Update</button>\n      </div>\n\n      <div class=\"not-edit\" v-else-if=\"Object.keys(editedTag).length === 0\">\n        <div class=\"tags\" v-for=\"tag in tags\" :key=\"tag.id\">\n          <p class=\"tag\" v-bind:style=\"{'color':tag.color}\">{{tag.title}}</p>\n          <div class=\"buttons\">\n            <button @click=\"deleteTag(tag)\">Delete</button>\n            <button @click=\"select(tag)\">Edit</button>\n          </div>\n        </div>\n      </div>\n\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  export default {\n  name: 'CreateTag',\n  data() {\n    return {\n      tags: [],\n      addedTag: null,\n      editedTag: {},\n      newTag: {\n        id: 0,\n        title: \"\",\n        color: \"\",\n        entries: [],\n      },\n    }\n  },\n  created() {\n    this.getTags();\n  },\n  methods: {\n    async deleteTag(tagToDelete) {\n      try {\n        await axios.delete(\"/api/tags/\" + tagToDelete.id);\n        this.getTags();\n        return true;\n      } catch (error) {\n        //console.log(error);\n      }\n    },\n    select(tag) {\n      this.editedTag.id = tag.id;\n      this.editedTag.title = tag.title;\n      this.editedTag.color = tag.color;\n      this.editedTag.entries = tag.entries;\n      this.getTags();\n    },\n    async updateTag() {\n      try {\n        await axios.put(\"/api/tags/\" + this.editedTag.id, {\n          id: this.editedTag.id,\n          title: this.editedTag.title,\n          color: this.editedTag.color,\n          enties: this.editedTag.entries,\n        });\n        this.editedTag = {};\n        this.getTags();\n        return true;\n      } catch (error) {\n        //console.log(error);\n      }\n\n    },\n    async getTags() {\n      try {\n        let response = await axios.get(\"/api/tags\");\n        this.tags = response.data;\n        return true;\n      } catch (error) {\n        //console.log(error);\n      }\n    },\n    async upload() {\n      try {\n        this.newTag.id = this.tags.length + 1000;\n        let response = await axios.post('/api/tags', {\n            id: this.newTag.id,\n            title: this.newTag.title,\n            color: this.newTag.color,\n            entries: this.newTag.entries,\n        });\n        this.addedTag = response.data;\n        this.getTags();\n      } catch (error) {\n        //console.log(error);\n      }\n\n    },\n  }\n}\n</script>\n\n<style scoped>\n.page {\n  margin: 30px;\n  margin-bottom: 50px;\n}\n\n.tag {\n  border: 2px solid black;\n  width: fit-content;\n  padding: 2px;\n\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}