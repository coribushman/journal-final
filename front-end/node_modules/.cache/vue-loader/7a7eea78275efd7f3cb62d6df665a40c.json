{"remainingRequest":"/Users/coribushman/Desktop/cp4-journal/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/coribushman/Desktop/cp4-journal/front-end/src/views/Create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/coribushman/Desktop/cp4-journal/front-end/src/views/Create.vue","mtime":1618205434612},{"path":"/Users/coribushman/Desktop/cp4-journal/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coribushman/Desktop/cp4-journal/front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/coribushman/Desktop/cp4-journal/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coribushman/Desktop/cp4-journal/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKICBleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NyZWF0ZScsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGpvdXJuYWw6IFtdLAogICAgICBhZGRlZEl0ZW06IG51bGwsCiAgICAgIG5ld0VudHJ5OiB7CiAgICAgICAgaWQ6IDAsCiAgICAgICAgdGl0bGU6ICIiLAogICAgICAgIHRleHQ6ICIiLAogICAgICAgIGRhdGU6ICIiLAogICAgICAgIGltYWdlOiAiIgogICAgICB9LAogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RW50cmllcygpOwogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0RW50cmllcygpIHsKICAgICAgdHJ5IHsKICAgICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoIi9hcGkvZW50cmllcyIpOwogICAgICAgIHRoaXMuam91cm5hbCA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgLy9jb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyB1cGxvYWQoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5uZXdFbnRyeS5pZCA9IHRoaXMuam91cm5hbC5sZW5ndGggKyAxOwogICAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoJy9hcGkvZW50cmllcycsIHsKICAgICAgICAgICAgaWQ6IHRoaXMubmV3RW50cnkuaWQsCiAgICAgICAgICAgIHRpdGxlOiB0aGlzLm5ld0VudHJ5LnRpdGxlLAogICAgICAgICAgICB0ZXh0OiB0aGlzLm5ld0VudHJ5LnRleHQsCiAgICAgICAgICAgIGRhdGU6IHRoaXMubmV3RW50cnkuZGF0ZSwKICAgICAgICAgICAgaW1hZ2U6IHRoaXMubmV3RW50cnkuaW1hZ2UKICAgICAgICB9KTsKICAgICAgICB0aGlzLmFkZGVkSXRlbSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgdGhpcy5nZXRFbnRyaWVzKCk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgLy9jb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0KCiAgICB9LAogIH0KfQo="},{"version":3,"sources":["Create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Create.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <h1>Create a Journal Entry</h1>\n    <div class=\"add\">\n        <div class=\"form\">\n          <input v-model=\"newEntry.title\" placeholder=\"Title\">\n          <p></p>\n          <textarea name=\"text\" rows=\"8\" cols=\"80\" v-model=\"newEntry.text\" placeholder=\"Text\"></textarea>\n          <p></p>\n          <textarea name=\"date\" rows=\"1\" cols=\"8\" v-model=\"newEntry.date\" placeholder=\"Date\"></textarea>\n          <p></p>\n          <input v-model=\"newEntry.image\" placeholder=\"Image URL\">\n          <button @click=\"upload\">Upload</button>\n        </div>\n        <div class=\"upload\" v-if=\"addedItem\">\n          <p>Your entry has been added! Title: {{addedItem.title}}</p>\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  export default {\n  name: 'Create',\n  data() {\n    return {\n      journal: [],\n      addedItem: null,\n      newEntry: {\n        id: 0,\n        title: \"\",\n        text: \"\",\n        date: \"\",\n        image: \"\"\n      },\n    }\n  },\n  created() {\n    this.getEntries();\n  },\n  methods: {\n    async getEntries() {\n      try {\n        let response = await axios.get(\"/api/entries\");\n        this.journal = response.data;\n        return true;\n      } catch (error) {\n        //console.log(error);\n      }\n    },\n    async upload() {\n      try {\n        this.newEntry.id = this.journal.length + 1;\n        let response = await axios.post('/api/entries', {\n            id: this.newEntry.id,\n            title: this.newEntry.title,\n            text: this.newEntry.text,\n            date: this.newEntry.date,\n            image: this.newEntry.image\n        });\n        this.addedItem = response.data;\n        this.getEntries();\n      } catch (error) {\n        //console.log(error);\n      }\n\n    },\n  }\n}\n</script>\n\n<style scoped>\n.page {\n  margin: 30px;\n}\n\n</style>\n"]}]}