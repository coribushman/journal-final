{"remainingRequest":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/src/views/CreateEntry.vue?vue&type=style&index=0&id=ca651ce8&scoped=true&lang=css&","dependencies":[{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/src/views/CreateEntry.vue","mtime":1618308421667},{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coribushman/Desktop/CS 260/cp4-journal/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wYWdlIHsKICBtYXJnaW46IDMwcHg7Cn0KCm9wdGlvbjplbXB0eQp7CiAgZGlzcGxheTpub25lOwp9Cgo="},{"version":3,"sources":["CreateEntry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CreateEntry.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <h1>Create a Journal Entry</h1>\n    <div class=\"add\">\n        <div class=\"form\">\n          <input v-model=\"newEntry.title\" placeholder=\"Title\">\n          <p></p>\n          <textarea name=\"text\" rows=\"8\" cols=\"80\" v-model=\"newEntry.text\" placeholder=\"Text\"></textarea>\n          <p></p>\n          <textarea name=\"date\" rows=\"1\" cols=\"8\" v-model=\"newEntry.date\" placeholder=\"Date\"></textarea>\n          <p></p>\n          <input v-model=\"newEntry.image\" placeholder=\"Image URL\">\n          <p></p>\n\n          <select v-model=\"newEntry.tagID\">\n            <option v-for=\"tag in tags\" v-bind:value=\"tag.id\" v-bind:key=\"tag.id\" :selected=\"tag.id === tags[0].id\">\n              {{ tag.title }}\n            </option>\n          </select>\n\n          <button @click=\"upload\">Upload</button>\n        </div>\n        <div class=\"upload\" v-if=\"addedItem\">\n          <p>Your entry has been added! Title: {{addedItem.title}}</p>\n        </div>\n        <div class=\"upload\" v-if=\"printTagMessage\">\n          <p>You must create or select a tag to create a post</p>\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  export default {\n  name: 'CreateEntry',\n  data() {\n    return {\n      printTagMessage: false,\n      journal: [],\n      tags: [],\n      addedItem: null,\n      newEntry: {\n        id: 0,\n        title: \"\",\n        text: \"\",\n        date: \"\",\n        image: \"\",\n        tagID: \"\",\n      },\n    }\n  },\n  created() {\n    this.getEntries();\n    this.getTags();\n\n  },\n  methods: {\n    async getTags() {\n      try {\n        let response = await axios.get(\"/api/tags\");\n        this.tags = response.data;\n        this.newEntry.tagID = this.tags != undefined ? this.tags[0].id : \"\";\n        return true;\n      } catch (error) {\n        //console.log(error);\n      }\n    },\n    async getEntries() {\n      try {\n        let response = await axios.get(\"/api/entries\");\n        this.journal = response.data;\n        return true;\n      } catch (error) {\n        //console.log(error);\n      }\n    },\n    async upload() {\n      if (this.newEntry.tagID == \"\") {\n        this.printTagMessage = true;\n        return;\n      }\n      else {\n        this.printTagMessage = false;\n      }\n      try {\n        this.newEntry.id = this.journal.length + 1;\n        let response = await axios.post('/api/entries', {\n            id: this.newEntry.id,\n            title: this.newEntry.title,\n            text: this.newEntry.text,\n            date: this.newEntry.date,\n            image: this.newEntry.image,\n            tagID: this.newEntry.tagID,\n            // tag: {},\n        });\n\n        this.addedItem = response.data;\n        this.getEntries();\n      } catch (error) {\n        //console.log(error);\n      }\n\n    },\n  }\n}\n</script>\n\n<style scoped>\n.page {\n  margin: 30px;\n}\n\noption:empty\n{\n  display:none;\n}\n\n</style>\n"]}]}